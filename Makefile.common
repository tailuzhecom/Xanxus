MPDIR   = $(LEVEL)
LLVM_DIR = /usr/lib/llvm-3.9
#LLVMLIBDIR = $(LLVMDIR)/Release+Asserts/lib
OPT = opt -O3

LEXER   = $(MPDIR)/tools-bin/lexer
PARSER  = $(MPDIR)/tools-bin/parser
SEMANT  = $(MPDIR)/tools-bin/semant

ifdef MP3
COOLRT  = $(MPDIR)/src/xanxusrt.o
else
COOLRT  = 
endif

debug = false

ifeq ($(debug),true)
    EXTRAFLAGS = -DDEBUG
    CGENOPTS = -c
else
    EXTRAFLAGS =
    CGENOPTS =
endif



CPPFLAGS = -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS $(EXTRAFLAGS) \
	   -I. -I$(MPDIR)/xanxus-support/include

#LDFLAGS = -L$(LLVMDIR)/Release+Asserts/lib
LDLIBS = 

CXXFLAGS = -g -std=c++11 -Wall -Wno-deprecated -Wno-unused -fpermissive -Wno-write-strings
CXXFLAGS += `${LLVM_DIR}/bin/llvm-config --cxxflags`
LDFLAGS += `${LLVM_DIR}/bin/llvm-config --ldflags`
LLVMLIBS = `${LLVM_DIR}/bin/llvm-config --libs`
LLVMLIBS += `${LLVM_DIR}/bin/llvm-config --system-libs`
CXX = clang++
CC = clang

.PRECIOUS: %.ast %.bc %.ll %.s %.exe

%.ast: %.xs
	$(LEXER) $< | $(PARSER) > $@

%.ll: %.ast $(CGEN)
	$(CGEN) $(CGENOPTS) < $< > $@

%.bc: %.ll
	llvm-as $< -o $@

%.s: %.bc
	llc --filetype=asm $< -o $@

%.out: %.s $(COOLRT)
	$(CC) -g $+ -o $@

%.verify: %.bc
	$(OPT) -verify $< | llvm-dis -o $@

%-opt.bc: %.bc
	$(OPT) -basicaa -instcombine -simplifycfg -sroa -early-cse -jump-threading \
	-reassociate -loop-simplify -loop-rotate -licm -loop-unswitch -instcombine -loop-simplify -loop-deletion \
	-loop-unroll -gvn -sccp -instcombine -jump-threading -dse -adce -simplifycfg -instcombine \
	$< -f -o $*-opt.bc

%-optmax.bc: %.bc
	$(OPT)  -tbaa -basicaa -globalopt -ipsccp -deadargelim -instcombine -simplifycfg -basiccg -inline \
	-argpromotion -sroa -early-cse -jump-threading -correlated-propagation \
	-simplifycfg -instcombine -tailcallelim -simplifycfg -reassociate -loop-simplify -loop-rotate -licm \
	-loop-unswitch -instcombine -loop-simplify -loop-idiom -loop-deletion -loop-unroll -gvn -memcpyopt -sccp \
	-instcombine -jump-threading -dse -adce -simplifycfg -instcombine -strip-dead-prototypes -globaldce -constmerge \
	$< -f -o $*-optmax.bc

%.output: %
	./$< > $@ || true

clean:
	-rm -f core *.bc *.ll *.out *.ast *.s *.o *.verify *.dwo
	$(CLEAN_LOCAL)
